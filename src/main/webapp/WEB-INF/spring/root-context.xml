<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:property-placeholder location="/WEB-INF/properties/*.properties"/>

	<!-- Mapper Annotation 스캔 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" 		value="com.spring.**.impl" />
	</bean>

	<!-- mysql 접속 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"	value="${db.driverClassName}" />
		<property name="url" 							value="${db.connectUrl}" />
		<property name="username" 				value="${db.username}" />
		<property name="password" 				value="${db.password}" />
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" 			ref="dataSource" />
		<property name="configLocation" 		value="classpath:/mappers/mybatis-config.xml" />
		<property name="mapperLocations"	value="classpath:/mappers/**/*_SQL.xml" />
	</bean>

	<!-- Controller를 제외한 빈등록 -->
	<context:component-scan base-package="com.spring">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- Transaction 설정하기 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- rollback-for : rollback을 발생시키는 Exception의 종류 -->
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 서비스 메서드 Transaction 연결 -->
	<aop:config>
		<aop:pointcut id="serviceMethod" expression="execution(* com.spring..impl.*Impl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>

	<!-- 스프링 Security --> 
	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true" />
		<!-- 접근 url 설정 -->
		<security:intercept-url pattern="/**" access="permitAll" />
		<!-- 로그인 및 로그인 폼 설정 -->
		<security:form-login 
			login-page="/loginForm.do" 
			authentication-success-handler-ref="loginSuccessHandler" 
			authentication-failure-handler-ref="loginFailureHandler"
			login-processing-url="/login.do"
			username-parameter="memberId" 
			password-parameter="memberPw" />
		<!-- 로그아웃 -->
		<security:logout 
			logout-url="/logout.do" 
			invalidate-session="true" 
			logout-success-url="/loginForm.do?status=logout" />
	</security:http> 
	
	<!-- secured method -->
	<security:global-method-security secured-annotations="enabled" /> 
	
	<!-- provider -->
	<security:authentication-manager>
		<security:authentication-provider ref="memberAuthProvider" />
	</security:authentication-manager>
	
	<!-- 사용되어지는 Bean -->
	<bean id="loginSuccessHandler" 	class="com.spring.member.MemberLoginSuccessHandler"/>
	<bean id="loginFailureHandler" 		class="com.spring.member.MemberLoginFailureHandler"/>
	<bean id="memberAuthProvider" 	class="com.spring.member.service.impl.MemberAuthenticationProvider"/>
	<bean id="passwordEncoder" 			class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

</beans>